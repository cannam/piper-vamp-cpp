// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: piper.capnp

#include "piper.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<64> b_b491ca63222c253f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63,  37,  44,  34,  99, 202, 145, 180,
     12,   0,   0,   0,   1,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 115, 105,
     99,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 101, 110, 116, 105, 102, 105,
    101, 114,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b491ca63222c253f = b_b491ca63222c253f.words;
#if !CAPNP_LITE
static const uint16_t m_b491ca63222c253f[] = {2, 0, 1};
static const uint16_t i_b491ca63222c253f[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b491ca63222c253f = {
  0xb491ca63222c253f, b_b491ca63222c253f.words, 64, nullptr, m_b491ca63222c253f,
  0, 3, i_b491ca63222c253f, nullptr, nullptr, { &s_b491ca63222c253f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<148> b_f8fda10bef70a97d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 169, 112, 239,  11, 161, 253, 248,
     12,   0,   0,   0,   1,   0,   3,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  80,  97, 114,  97,
    109, 101, 116, 101, 114,  68, 101, 115,
     99, 114, 105, 112, 116, 111, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  96,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
     98,  97, 115, 105,  99,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63,  37,  44,  34,  99, 202, 145, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 105, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  97, 117, 108, 116,  86,
     97, 108, 117, 101,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  81, 117,  97, 110, 116, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117,  97, 110, 116, 105, 122, 101,
     83, 116, 101, 112,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,  78,  97, 109,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   6,   0,   0,   0, }
};
::capnp::word const* const bp_f8fda10bef70a97d = b_f8fda10bef70a97d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f8fda10bef70a97d[] = {
  &s_b491ca63222c253f,
};
static const uint16_t m_f8fda10bef70a97d[] = {0, 4, 5, 3, 2, 6, 1, 7};
static const uint16_t i_f8fda10bef70a97d[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_f8fda10bef70a97d = {
  0xf8fda10bef70a97d, b_f8fda10bef70a97d.words, 148, d_f8fda10bef70a97d, m_f8fda10bef70a97d,
  1, 8, i_f8fda10bef70a97d, nullptr, nullptr, { &s_f8fda10bef70a97d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_eca23e4a04bdfeb2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178, 254, 189,   4,  74,  62, 162, 236,
     12,   0,   0,   0,   2,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  83,  97, 109, 112,
    108, 101,  84, 121, 112, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 110, 101,  83,  97, 109, 112, 108,
    101,  80, 101, 114,  83, 116, 101, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 120, 101, 100,  83,  97, 109,
    112, 108, 101,  82,  97, 116, 101,   0,
    118,  97, 114, 105,  97,  98, 108, 101,
     83,  97, 109, 112, 108, 101,  82,  97,
    116, 101,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eca23e4a04bdfeb2 = b_eca23e4a04bdfeb2.words;
#if !CAPNP_LITE
static const uint16_t m_eca23e4a04bdfeb2[] = {1, 0, 2};
const ::capnp::_::RawSchema s_eca23e4a04bdfeb2 = {
  0xeca23e4a04bdfeb2, b_eca23e4a04bdfeb2.words, 34, nullptr, m_eca23e4a04bdfeb2,
  0, 3, nullptr, nullptr, nullptr, { &s_eca23e4a04bdfeb2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SampleType_eca23e4a04bdfeb2, eca23e4a04bdfeb2);
static const ::capnp::_::AlignedData<215> b_b2d0c825aac8249c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156,  36, 200, 170,  37, 200, 208, 178,
     12,   0,   0,   0,   1,   0,   3,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 167,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  67, 111, 110, 102,
    105, 103, 117, 114, 101, 100,  79, 117,
    116, 112, 117, 116,  68, 101, 115,  99,
    114, 105, 112, 116, 111, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   3,   0,   1,   0,
     84,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     81,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   1,   0,   0,   3,   0,   1,   0,
     92,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     89,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    137,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   1,   0,   0,   3,   0,   1,   0,
    156,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   1,   0,   0,   3,   0,   1,   0,
    164,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    161,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    172,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    169,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   1,   0,   0,   3,   0,   1,   0,
    180,   1,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115,  70, 105, 120, 101, 100,
     66, 105, 110,  67, 111, 117, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 105, 110,  67, 111, 117, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 105, 110,  78,  97, 109, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   6,   0,   0,   0,
    104,  97, 115,  75, 110, 111, 119, 110,
     69, 120, 116, 101, 110, 116, 115,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  81, 117,  97, 110, 116, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117,  97, 110, 116, 105, 122, 101,
     83, 116, 101, 112,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 109, 112, 108, 101,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    178, 254, 189,   4,  74,  62, 162, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 109, 112, 108, 101,  82,  97,
    116, 101,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115,  68, 117, 114,  97, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2d0c825aac8249c = b_b2d0c825aac8249c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b2d0c825aac8249c[] = {
  &s_eca23e4a04bdfeb2,
};
static const uint16_t m_b2d0c825aac8249c[] = {2, 3, 11, 1, 4, 7, 6, 5, 8, 10, 9, 0};
static const uint16_t i_b2d0c825aac8249c[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
const ::capnp::_::RawSchema s_b2d0c825aac8249c = {
  0xb2d0c825aac8249c, b_b2d0c825aac8249c.words, 215, d_b2d0c825aac8249c, m_b2d0c825aac8249c,
  1, 12, i_b2d0c825aac8249c, nullptr, nullptr, { &s_b2d0c825aac8249c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_902c6065e1be824a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     74, 130, 190, 225, 101,  96,  44, 144,
     12,   0,   0,   0,   1,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  79, 117, 116, 112,
    117, 116,  68, 101, 115,  99, 114, 105,
    112, 116, 111, 114,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     98,  97, 115, 105,  99,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63,  37,  44,  34,  99, 202, 145, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103, 117, 114,
    101, 100,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    156,  36, 200, 170,  37, 200, 208, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_902c6065e1be824a = b_902c6065e1be824a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_902c6065e1be824a[] = {
  &s_b2d0c825aac8249c,
  &s_b491ca63222c253f,
};
static const uint16_t m_902c6065e1be824a[] = {0, 1};
static const uint16_t i_902c6065e1be824a[] = {0, 1};
const ::capnp::_::RawSchema s_902c6065e1be824a = {
  0x902c6065e1be824a, b_902c6065e1be824a.words, 49, d_902c6065e1be824a, m_902c6065e1be824a,
  2, 2, i_902c6065e1be824a, nullptr, nullptr, { &s_902c6065e1be824a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_f50fb3b9c1bf75f4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    244, 117, 191, 193, 185, 179,  15, 245,
     12,   0,   0,   0,   2,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  73, 110, 112, 117,
    116,  68, 111, 109,  97, 105, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101,  68, 111, 109,  97,
    105, 110,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 113, 117, 101, 110,  99,
    121,  68, 111, 109,  97, 105, 110,   0, }
};
::capnp::word const* const bp_f50fb3b9c1bf75f4 = b_f50fb3b9c1bf75f4.words;
#if !CAPNP_LITE
static const uint16_t m_f50fb3b9c1bf75f4[] = {1, 0};
const ::capnp::_::RawSchema s_f50fb3b9c1bf75f4 = {
  0xf50fb3b9c1bf75f4, b_f50fb3b9c1bf75f4.words, 27, nullptr, m_f50fb3b9c1bf75f4,
  0, 2, nullptr, nullptr, nullptr, { &s_f50fb3b9c1bf75f4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(InputDomain_f50fb3b9c1bf75f4, f50fb3b9c1bf75f4);
static const ::capnp::_::AlignedData<222> b_b83ac85463e6caa1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 202, 230,  99,  84, 200,  58, 184,
     12,   0,   0,   0,   1,   0,   2,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      8,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 167,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  69, 120, 116, 114,
     97,  99, 116, 111, 114,  83, 116,  97,
    116, 105,  99,  68,  97, 116,  97,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   3,   0,   1,   0,
     76,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
     88,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   1,   0,   0,   3,   0,   1,   0,
     92,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    156,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   1,   0,   0,   3,   0,   1,   0,
    180,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 105,  99,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63,  37,  44,  34,  99, 202, 145, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 107, 101, 114,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 112, 121, 114, 105, 103, 104,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 116, 101, 103, 111, 114, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  67, 104,  97, 110, 110,
    101, 108,  67, 111, 117, 110, 116,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  67, 104,  97, 110, 110,
    101, 108,  67, 111, 117, 110, 116,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    125, 169, 112, 239,  11, 161, 253, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 103, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 112, 117, 116,  68, 111, 109,
     97, 105, 110,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    244, 117, 191, 193, 185, 179,  15, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 105,  99,  79, 117, 116,
    112, 117, 116,  73, 110, 102, 111,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63,  37,  44,  34,  99, 202, 145, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b83ac85463e6caa1 = b_b83ac85463e6caa1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b83ac85463e6caa1[] = {
  &s_b491ca63222c253f,
  &s_f50fb3b9c1bf75f4,
  &s_f8fda10bef70a97d,
};
static const uint16_t m_b83ac85463e6caa1[] = {1, 11, 5, 3, 10, 0, 2, 7, 6, 8, 9, 4};
static const uint16_t i_b83ac85463e6caa1[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
const ::capnp::_::RawSchema s_b83ac85463e6caa1 = {
  0xb83ac85463e6caa1, b_b83ac85463e6caa1.words, 222, d_b83ac85463e6caa1, m_b83ac85463e6caa1,
  3, 12, i_b83ac85463e6caa1, nullptr, nullptr, { &s_b83ac85463e6caa1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_84d515888a427d07 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7, 125,  66, 138, 136,  21, 213, 132,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 101,  97, 108,
     84, 105, 109, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 101,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 115, 101,  99,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84d515888a427d07 = b_84d515888a427d07.words;
#if !CAPNP_LITE
static const uint16_t m_84d515888a427d07[] = {1, 0};
static const uint16_t i_84d515888a427d07[] = {0, 1};
const ::capnp::_::RawSchema s_84d515888a427d07 = {
  0x84d515888a427d07, b_84d515888a427d07.words, 47, nullptr, m_84d515888a427d07,
  0, 2, i_84d515888a427d07, nullptr, nullptr, { &s_84d515888a427d07, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_c6f3f05f2bc614ba = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    186,  20, 198,  43,  95, 240, 243, 198,
     12,   0,   0,   0,   1,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  80, 114, 111,  99,
    101, 115, 115,  73, 110, 112, 117, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 112, 117, 116,  66, 117, 102,
    102, 101, 114, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7, 125,  66, 138, 136,  21, 213, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6f3f05f2bc614ba = b_c6f3f05f2bc614ba.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c6f3f05f2bc614ba[] = {
  &s_84d515888a427d07,
};
static const uint16_t m_c6f3f05f2bc614ba[] = {0, 1};
static const uint16_t i_c6f3f05f2bc614ba[] = {0, 1};
const ::capnp::_::RawSchema s_c6f3f05f2bc614ba = {
  0xc6f3f05f2bc614ba, b_c6f3f05f2bc614ba.words, 58, d_c6f3f05f2bc614ba, m_c6f3f05f2bc614ba,
  1, 2, i_c6f3f05f2bc614ba, nullptr, nullptr, { &s_c6f3f05f2bc614ba, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<116> b_d6a172208c9a1760 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     96,  23, 154, 140,  32, 114, 161, 214,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  70, 101,  97, 116,
    117, 114, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 115,  84, 105, 109, 101, 115,
    116,  97, 109, 112,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7, 125,  66, 138, 136,  21, 213, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115,  68, 117, 114,  97, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 117, 114,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7, 125,  66, 138, 136,  21, 213, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  98, 101, 108,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101,  86,
     97, 108, 117, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   4,   0,   0,   0, }
};
::capnp::word const* const bp_d6a172208c9a1760 = b_d6a172208c9a1760.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d6a172208c9a1760[] = {
  &s_84d515888a427d07,
};
static const uint16_t m_d6a172208c9a1760[] = {3, 5, 2, 0, 4, 1};
static const uint16_t i_d6a172208c9a1760[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_d6a172208c9a1760 = {
  0xd6a172208c9a1760, b_d6a172208c9a1760.words, 116, d_d6a172208c9a1760, m_d6a172208c9a1760,
  1, 6, i_d6a172208c9a1760, nullptr, nullptr, { &s_d6a172208c9a1760, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_ffa3fccceb684869 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    105,  72, 104, 235, 204, 252, 163, 255,
     12,   0,   0,   0,   1,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  70, 101,  97, 116,
    117, 114, 101,  83, 101, 116,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     36, 107,  49,  70, 195, 114,  37, 171,
      1,   0,   0,   0,  58,   0,   0,   0,
     70,  83,  80,  97, 105, 114,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    102, 101,  97, 116, 117, 114, 101,  80,
     97, 105, 114, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     36, 107,  49,  70, 195, 114,  37, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ffa3fccceb684869 = b_ffa3fccceb684869.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ffa3fccceb684869[] = {
  &s_ab2572c346316b24,
};
static const uint16_t m_ffa3fccceb684869[] = {0};
static const uint16_t i_ffa3fccceb684869[] = {0};
const ::capnp::_::RawSchema s_ffa3fccceb684869 = {
  0xffa3fccceb684869, b_ffa3fccceb684869.words, 40, d_ffa3fccceb684869, m_ffa3fccceb684869,
  1, 1, i_ffa3fccceb684869, nullptr, nullptr, { &s_ffa3fccceb684869, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_ab2572c346316b24 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 107,  49,  70, 195, 114,  37, 171,
     23,   0,   0,   0,   1,   0,   0,   0,
    105,  72, 104, 235, 204, 252, 163, 255,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  70, 101,  97, 116,
    117, 114, 101,  83, 101, 116,  46,  70,
     83,  80,  97, 105, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    111, 117, 116, 112, 117, 116,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     96,  23, 154, 140,  32, 114, 161, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   4,   0, }
};
::capnp::word const* const bp_ab2572c346316b24 = b_ab2572c346316b24.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ab2572c346316b24[] = {
  &s_d6a172208c9a1760,
};
static const uint16_t m_ab2572c346316b24[] = {1, 0};
static const uint16_t i_ab2572c346316b24[] = {0, 1};
const ::capnp::_::RawSchema s_ab2572c346316b24 = {
  0xab2572c346316b24, b_ab2572c346316b24.words, 54, d_ab2572c346316b24, m_ab2572c346316b24,
  1, 2, i_ab2572c346316b24, nullptr, nullptr, { &s_ab2572c346316b24, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_fe907ebf410a65a4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    164, 101,  10,  65, 191, 126, 144, 254,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  70, 114,  97, 109,
    105, 110, 103,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 101, 112,  83, 105, 122, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  83, 105, 122,
    101,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe907ebf410a65a4 = b_fe907ebf410a65a4.words;
#if !CAPNP_LITE
static const uint16_t m_fe907ebf410a65a4[] = {1, 0};
static const uint16_t i_fe907ebf410a65a4[] = {0, 1};
const ::capnp::_::RawSchema s_fe907ebf410a65a4 = {
  0xfe907ebf410a65a4, b_fe907ebf410a65a4.words, 49, nullptr, m_fe907ebf410a65a4,
  0, 2, i_fe907ebf410a65a4, nullptr, nullptr, { &s_fe907ebf410a65a4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<88> b_db209a01f86fe045 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69, 224, 111, 248,   1, 154,  32, 219,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  67, 111, 110, 102,
    105, 103, 117, 114,  97, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     55, 221,  34, 212, 254,  86,  11, 144,
      1,   0,   0,   0,  58,   0,   0,   0,
     80,  86,  80,  97, 105, 114,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 101, 116, 101,
    114,  86,  97, 108, 117, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55, 221,  34, 212, 254,  86,  11, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 114, 114, 101, 110, 116,  80,
    114, 111, 103, 114,  97, 109,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108,  67,
    111, 117, 110, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114,  97, 109, 105, 110, 103,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 101,  10,  65, 191, 126, 144, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db209a01f86fe045 = b_db209a01f86fe045.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_db209a01f86fe045[] = {
  &s_900b56fed422dd37,
  &s_fe907ebf410a65a4,
};
static const uint16_t m_db209a01f86fe045[] = {2, 1, 3, 0};
static const uint16_t i_db209a01f86fe045[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_db209a01f86fe045 = {
  0xdb209a01f86fe045, b_db209a01f86fe045.words, 88, d_db209a01f86fe045, m_db209a01f86fe045,
  2, 4, i_db209a01f86fe045, nullptr, nullptr, { &s_db209a01f86fe045, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_900b56fed422dd37 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55, 221,  34, 212, 254,  86,  11, 144,
     26,   0,   0,   0,   1,   0,   1,   0,
     69, 224, 111, 248,   1, 154,  32, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  67, 111, 110, 102,
    105, 103, 117, 114,  97, 116, 105, 111,
    110,  46,  80,  86,  80,  97, 105, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 101, 116, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_900b56fed422dd37 = b_900b56fed422dd37.words;
#if !CAPNP_LITE
static const uint16_t m_900b56fed422dd37[] = {0, 1};
static const uint16_t i_900b56fed422dd37[] = {0, 1};
const ::capnp::_::RawSchema s_900b56fed422dd37 = {
  0x900b56fed422dd37, b_900b56fed422dd37.words, 50, nullptr, m_900b56fed422dd37,
  0, 2, i_900b56fed422dd37, nullptr, nullptr, { &s_900b56fed422dd37, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_b5edf73eb2e79c4e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     78, 156, 231, 178,  62, 247, 237, 181,
     12,   0,   0,   0,   2,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  65, 100,  97, 112,
    116, 101, 114,  70, 108,  97, 103,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100,  97, 112, 116,  73, 110, 112,
    117, 116,  68, 111, 109,  97, 105, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100,  97, 112, 116,  67, 104,  97,
    110, 110, 101, 108,  67, 111, 117, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
     97, 100,  97, 112, 116,  66, 117, 102,
    102, 101, 114,  83, 105, 122, 101,   0, }
};
::capnp::word const* const bp_b5edf73eb2e79c4e = b_b5edf73eb2e79c4e.words;
#if !CAPNP_LITE
static const uint16_t m_b5edf73eb2e79c4e[] = {2, 1, 0};
const ::capnp::_::RawSchema s_b5edf73eb2e79c4e = {
  0xb5edf73eb2e79c4e, b_b5edf73eb2e79c4e.words, 34, nullptr, m_b5edf73eb2e79c4e,
  0, 3, nullptr, nullptr, nullptr, { &s_b5edf73eb2e79c4e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(AdapterFlag_b5edf73eb2e79c4e, b5edf73eb2e79c4e);
static const ::capnp::_::AlignedData<29> b_9ed58097be8bc6f3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    243, 198, 139, 190, 151, 128, 213, 158,
     12,   0,   0,   0,   4,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  97, 100,  97, 112,
    116,  65, 108, 108,  83,  97, 102, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     78, 156, 231, 178,  62, 247, 237, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  19,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ed58097be8bc6f3 = b_9ed58097be8bc6f3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9ed58097be8bc6f3 = {
  0x9ed58097be8bc6f3, b_9ed58097be8bc6f3.words, 29, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9ed58097be8bc6f3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_eb49b9892c5b9b83 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    131, 155,  91,  44, 137, 185,  73, 235,
     12,   0,   0,   0,   4,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  97, 100,  97, 112,
    116,  65, 108, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     78, 156, 231, 178,  62, 247, 237, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  27,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0, }
};
::capnp::word const* const bp_eb49b9892c5b9b83 = b_eb49b9892c5b9b83.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_eb49b9892c5b9b83 = {
  0xeb49b9892c5b9b83, b_eb49b9892c5b9b83.words, 28, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_eb49b9892c5b9b83, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_b54ff18dabd0d4e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225, 212, 208, 171, 141, 241,  79, 181,
     12,   0,   0,   0,   1,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  76, 105, 115, 116,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    102, 114, 111, 109,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b54ff18dabd0d4e1 = b_b54ff18dabd0d4e1.words;
#if !CAPNP_LITE
static const uint16_t m_b54ff18dabd0d4e1[] = {0};
static const uint16_t i_b54ff18dabd0d4e1[] = {0};
const ::capnp::_::RawSchema s_b54ff18dabd0d4e1 = {
  0xb54ff18dabd0d4e1, b_b54ff18dabd0d4e1.words, 36, nullptr, m_b54ff18dabd0d4e1,
  0, 1, i_b54ff18dabd0d4e1, nullptr, nullptr, { &s_b54ff18dabd0d4e1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_c8b36e8e9e8d6f15 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21, 111, 141, 158, 142, 110, 179, 200,
     12,   0,   0,   0,   1,   0,   0,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  76, 105, 115, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     97, 118,  97, 105, 108,  97,  98, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    161, 202, 230,  99,  84, 200,  58, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c8b36e8e9e8d6f15 = b_c8b36e8e9e8d6f15.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c8b36e8e9e8d6f15[] = {
  &s_b83ac85463e6caa1,
};
static const uint16_t m_c8b36e8e9e8d6f15[] = {0};
static const uint16_t i_c8b36e8e9e8d6f15[] = {0};
const ::capnp::_::RawSchema s_c8b36e8e9e8d6f15 = {
  0xc8b36e8e9e8d6f15, b_c8b36e8e9e8d6f15.words, 38, d_c8b36e8e9e8d6f15, m_c8b36e8e9e8d6f15,
  1, 1, i_c8b36e8e9e8d6f15, nullptr, nullptr, { &s_c8b36e8e9e8d6f15, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_fca0f520555d0c94 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148,  12,  93,  85,  32, 245, 160, 252,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  76, 111,  97, 100,
     82, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 112, 117, 116,  83,  97, 109,
    112, 108, 101,  82,  97, 116, 101,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100,  97, 112, 116, 101, 114,  70,
    108,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     78, 156, 231, 178,  62, 247, 237, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fca0f520555d0c94 = b_fca0f520555d0c94.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fca0f520555d0c94[] = {
  &s_b5edf73eb2e79c4e,
};
static const uint16_t m_fca0f520555d0c94[] = {2, 1, 0};
static const uint16_t i_fca0f520555d0c94[] = {0, 1, 2};
const ::capnp::_::RawSchema s_fca0f520555d0c94 = {
  0xfca0f520555d0c94, b_fca0f520555d0c94.words, 68, d_fca0f520555d0c94, m_fca0f520555d0c94,
  1, 3, i_fca0f520555d0c94, nullptr, nullptr, { &s_fca0f520555d0c94, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_82fb08d7f06fe81d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29, 232, 111, 240, 215,   8, 251, 130,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  76, 111,  97, 100,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 105,  99,  68,  97,
    116,  97,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    161, 202, 230,  99,  84, 200,  58, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  97, 117, 108, 116,  67,
    111, 110, 102, 105, 103, 117, 114,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69, 224, 111, 248,   1, 154,  32, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82fb08d7f06fe81d = b_82fb08d7f06fe81d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_82fb08d7f06fe81d[] = {
  &s_b83ac85463e6caa1,
  &s_db209a01f86fe045,
};
static const uint16_t m_82fb08d7f06fe81d[] = {2, 0, 1};
static const uint16_t i_82fb08d7f06fe81d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_82fb08d7f06fe81d = {
  0x82fb08d7f06fe81d, b_82fb08d7f06fe81d.words, 66, d_82fb08d7f06fe81d, m_82fb08d7f06fe81d,
  2, 3, i_82fb08d7f06fe81d, nullptr, nullptr, { &s_82fb08d7f06fe81d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_fcf72b478bbe9d02 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      2, 157, 190, 139,  71,  43, 247, 252,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  67, 111, 110, 102,
    105, 103, 117, 114,  97, 116, 105, 111,
    110,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103, 117, 114,
     97, 116, 105, 111, 110,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69, 224, 111, 248,   1, 154,  32, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fcf72b478bbe9d02 = b_fcf72b478bbe9d02.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fcf72b478bbe9d02[] = {
  &s_db209a01f86fe045,
};
static const uint16_t m_fcf72b478bbe9d02[] = {1, 0};
static const uint16_t i_fcf72b478bbe9d02[] = {0, 1};
const ::capnp::_::RawSchema s_fcf72b478bbe9d02 = {
  0xfcf72b478bbe9d02, b_fcf72b478bbe9d02.words, 50, d_fcf72b478bbe9d02, m_fcf72b478bbe9d02,
  1, 2, i_fcf72b478bbe9d02, nullptr, nullptr, { &s_fcf72b478bbe9d02, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_c433db5864bf6d56 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 109, 191, 100,  88, 219,  51, 196,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  67, 111, 110, 102,
    105, 103, 117, 114,  97, 116, 105, 111,
    110,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116, 112, 117, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 130, 190, 225, 101,  96,  44, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114,  97, 109, 105, 110, 103,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 101,  10,  65, 191, 126, 144, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c433db5864bf6d56 = b_c433db5864bf6d56.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c433db5864bf6d56[] = {
  &s_902c6065e1be824a,
  &s_fe907ebf410a65a4,
};
static const uint16_t m_c433db5864bf6d56[] = {2, 0, 1};
static const uint16_t i_c433db5864bf6d56[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c433db5864bf6d56 = {
  0xc433db5864bf6d56, b_c433db5864bf6d56.words, 68, d_c433db5864bf6d56, m_c433db5864bf6d56,
  2, 3, i_c433db5864bf6d56, nullptr, nullptr, { &s_c433db5864bf6d56, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_ea87c8bff474ddce = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    206, 221, 116, 244, 191, 200, 135, 234,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  80, 114, 111,  99,
    101, 115, 115,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111,  99, 101, 115, 115,  73,
    110, 112, 117, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    186,  20, 198,  43,  95, 240, 243, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea87c8bff474ddce = b_ea87c8bff474ddce.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ea87c8bff474ddce[] = {
  &s_c6f3f05f2bc614ba,
};
static const uint16_t m_ea87c8bff474ddce[] = {0, 1};
static const uint16_t i_ea87c8bff474ddce[] = {0, 1};
const ::capnp::_::RawSchema s_ea87c8bff474ddce = {
  0xea87c8bff474ddce, b_ea87c8bff474ddce.words, 49, d_ea87c8bff474ddce, m_ea87c8bff474ddce,
  1, 2, i_ea87c8bff474ddce, nullptr, nullptr, { &s_ea87c8bff474ddce, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_fe801447309c2782 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130,  39, 156,  48,  71,  20, 128, 254,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  80, 114, 111,  99,
    101, 115, 115,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    105,  72, 104, 235, 204, 252, 163, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe801447309c2782 = b_fe801447309c2782.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fe801447309c2782[] = {
  &s_ffa3fccceb684869,
};
static const uint16_t m_fe801447309c2782[] = {1, 0};
static const uint16_t i_fe801447309c2782[] = {0, 1};
const ::capnp::_::RawSchema s_fe801447309c2782 = {
  0xfe801447309c2782, b_fe801447309c2782.words, 49, d_fe801447309c2782, m_fe801447309c2782,
  1, 2, i_fe801447309c2782, nullptr, nullptr, { &s_fe801447309c2782, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_d8c0271e01d84377 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119,  67, 216,   1,  30,  39, 192, 216,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  70, 105, 110, 105,
    115, 104,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8c0271e01d84377 = b_d8c0271e01d84377.words;
#if !CAPNP_LITE
static const uint16_t m_d8c0271e01d84377[] = {0};
static const uint16_t i_d8c0271e01d84377[] = {0};
const ::capnp::_::RawSchema s_d8c0271e01d84377 = {
  0xd8c0271e01d84377, b_d8c0271e01d84377.words, 33, nullptr, m_d8c0271e01d84377,
  0, 1, i_d8c0271e01d84377, nullptr, nullptr, { &s_d8c0271e01d84377, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_ff4c6fd2917a8eb7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    183, 142, 122, 145, 210, 111,  76, 255,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  70, 105, 110, 105,
    115, 104,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    105,  72, 104, 235, 204, 252, 163, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff4c6fd2917a8eb7 = b_ff4c6fd2917a8eb7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ff4c6fd2917a8eb7[] = {
  &s_ffa3fccceb684869,
};
static const uint16_t m_ff4c6fd2917a8eb7[] = {1, 0};
static const uint16_t i_ff4c6fd2917a8eb7[] = {0, 1};
const ::capnp::_::RawSchema s_ff4c6fd2917a8eb7 = {
  0xff4c6fd2917a8eb7, b_ff4c6fd2917a8eb7.words, 49, d_ff4c6fd2917a8eb7, m_ff4c6fd2917a8eb7,
  1, 2, i_ff4c6fd2917a8eb7, nullptr, nullptr, { &s_ff4c6fd2917a8eb7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_a7e9dceb8fbd0e23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35,  14, 189, 143, 235, 220, 233, 167,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  69, 114, 114, 111,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 100, 101,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a7e9dceb8fbd0e23 = b_a7e9dceb8fbd0e23.words;
#if !CAPNP_LITE
static const uint16_t m_a7e9dceb8fbd0e23[] = {0, 1};
static const uint16_t i_a7e9dceb8fbd0e23[] = {0, 1};
const ::capnp::_::RawSchema s_a7e9dceb8fbd0e23 = {
  0xa7e9dceb8fbd0e23, b_a7e9dceb8fbd0e23.words, 47, nullptr, m_a7e9dceb8fbd0e23,
  0, 2, i_a7e9dceb8fbd0e23, nullptr, nullptr, { &s_a7e9dceb8fbd0e23, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_df8b913d24f04413 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19,  68, 240,  36,  61, 145, 139, 223,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 112,  99,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    249, 194,  99, 230, 119,  47, 109, 165,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     58, 251,  21, 152, 157, 214, 251, 166,
     17,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,   0, }
};
::capnp::word const* const bp_df8b913d24f04413 = b_df8b913d24f04413.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_df8b913d24f04413[] = {
  &s_a56d2f77e663c2f9,
  &s_a6fbd69d9815fb3a,
};
static const uint16_t m_df8b913d24f04413[] = {0, 1};
static const uint16_t i_df8b913d24f04413[] = {0, 1};
const ::capnp::_::RawSchema s_df8b913d24f04413 = {
  0xdf8b913d24f04413, b_df8b913d24f04413.words, 33, d_df8b913d24f04413, m_df8b913d24f04413,
  2, 2, i_df8b913d24f04413, nullptr, nullptr, { &s_df8b913d24f04413, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_a56d2f77e663c2f9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249, 194,  99, 230, 119,  47, 109, 165,
     23,   0,   0,   0,   1,   0,   1,   0,
     19,  68, 240,  36,  61, 145, 139, 223,
      2,   0,   7,   0,   1,   0,   3,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 112,  99,  82,
    101, 113, 117, 101, 115, 116,  46, 105,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a56d2f77e663c2f9 = b_a56d2f77e663c2f9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a56d2f77e663c2f9[] = {
  &s_df8b913d24f04413,
};
static const uint16_t m_a56d2f77e663c2f9[] = {2, 0, 1};
static const uint16_t i_a56d2f77e663c2f9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a56d2f77e663c2f9 = {
  0xa56d2f77e663c2f9, b_a56d2f77e663c2f9.words, 62, d_a56d2f77e663c2f9, m_a56d2f77e663c2f9,
  1, 3, i_a56d2f77e663c2f9, nullptr, nullptr, { &s_a56d2f77e663c2f9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<93> b_a6fbd69d9815fb3a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58, 251,  21, 152, 157, 214, 251, 166,
     23,   0,   0,   0,   1,   0,   1,   0,
     19,  68, 240,  36,  61, 145, 139, 223,
      2,   0,   7,   0,   1,   0,   5,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 112,  99,  82,
    101, 113, 117, 101, 115, 116,  46, 114,
    101, 113, 117, 101, 115, 116,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    225, 212, 208, 171, 141, 241,  79, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  97, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    148,  12,  93,  85,  32, 245, 160, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103, 117, 114,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      2, 157, 190, 139,  71,  43, 247, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111,  99, 101, 115, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    206, 221, 116, 244, 191, 200, 135, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 110, 105, 115, 104,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    119,  67, 216,   1,  30,  39, 192, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a6fbd69d9815fb3a = b_a6fbd69d9815fb3a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a6fbd69d9815fb3a[] = {
  &s_b54ff18dabd0d4e1,
  &s_d8c0271e01d84377,
  &s_df8b913d24f04413,
  &s_ea87c8bff474ddce,
  &s_fca0f520555d0c94,
  &s_fcf72b478bbe9d02,
};
static const uint16_t m_a6fbd69d9815fb3a[] = {2, 4, 0, 1, 3};
static const uint16_t i_a6fbd69d9815fb3a[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_a6fbd69d9815fb3a = {
  0xa6fbd69d9815fb3a, b_a6fbd69d9815fb3a.words, 93, d_a6fbd69d9815fb3a, m_a6fbd69d9815fb3a,
  6, 5, i_a6fbd69d9815fb3a, nullptr, nullptr, { &s_a6fbd69d9815fb3a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_b1fd870b8c5fe885 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    133, 232,  95, 140,  11, 135, 253, 177,
     12,   0,   0,   0,   1,   0,   1,   0,
      6, 146, 153,  76, 196, 198, 177, 196,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 112,  99,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    219, 193,  90, 212, 174,  38, 213, 214,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    172, 211, 176, 133,  68, 187,  18, 173,
     17,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1fd870b8c5fe885 = b_b1fd870b8c5fe885.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1fd870b8c5fe885[] = {
  &s_ad12bb4485b0d3ac,
  &s_d6d526aed45ac1db,
};
static const uint16_t m_b1fd870b8c5fe885[] = {0, 1};
static const uint16_t i_b1fd870b8c5fe885[] = {0, 1};
const ::capnp::_::RawSchema s_b1fd870b8c5fe885 = {
  0xb1fd870b8c5fe885, b_b1fd870b8c5fe885.words, 34, d_b1fd870b8c5fe885, m_b1fd870b8c5fe885,
  2, 2, i_b1fd870b8c5fe885, nullptr, nullptr, { &s_b1fd870b8c5fe885, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_d6d526aed45ac1db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219, 193,  90, 212, 174,  38, 213, 214,
     24,   0,   0,   0,   1,   0,   1,   0,
    133, 232,  95, 140,  11, 135, 253, 177,
      2,   0,   7,   0,   1,   0,   3,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 112,  99,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d6d526aed45ac1db = b_d6d526aed45ac1db.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d6d526aed45ac1db[] = {
  &s_b1fd870b8c5fe885,
};
static const uint16_t m_d6d526aed45ac1db[] = {2, 0, 1};
static const uint16_t i_d6d526aed45ac1db[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d6d526aed45ac1db = {
  0xd6d526aed45ac1db, b_d6d526aed45ac1db.words, 62, d_d6d526aed45ac1db, m_d6d526aed45ac1db,
  1, 3, i_d6d526aed45ac1db, nullptr, nullptr, { &s_d6d526aed45ac1db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<109> b_ad12bb4485b0d3ac = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    172, 211, 176, 133,  68, 187,  18, 173,
     24,   0,   0,   0,   1,   0,   1,   0,
    133, 232,  95, 140,  11, 135, 253, 177,
      2,   0,   7,   0,   1,   0,   6,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 112, 101, 114,  46,  99,  97,
    112, 110, 112,  58,  82, 112,  99,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    114, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
    101, 114, 114, 111, 114,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     35,  14, 189, 143, 235, 220, 233, 167,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 111, 141, 158, 142, 110, 179, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  97, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29, 232, 111, 240, 215,   8, 251, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103, 117, 114,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     86, 109, 191, 100,  88, 219,  51, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111,  99, 101, 115, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  39, 156,  48,  71,  20, 128, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 110, 105, 115, 104,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    183, 142, 122, 145, 210, 111,  76, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad12bb4485b0d3ac = b_ad12bb4485b0d3ac.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ad12bb4485b0d3ac[] = {
  &s_82fb08d7f06fe81d,
  &s_a7e9dceb8fbd0e23,
  &s_b1fd870b8c5fe885,
  &s_c433db5864bf6d56,
  &s_c8b36e8e9e8d6f15,
  &s_fe801447309c2782,
  &s_ff4c6fd2917a8eb7,
};
static const uint16_t m_ad12bb4485b0d3ac[] = {3, 0, 5, 1, 2, 4};
static const uint16_t i_ad12bb4485b0d3ac[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_ad12bb4485b0d3ac = {
  0xad12bb4485b0d3ac, b_ad12bb4485b0d3ac.words, 109, d_ad12bb4485b0d3ac, m_ad12bb4485b0d3ac,
  7, 6, i_ad12bb4485b0d3ac, nullptr, nullptr, { &s_ad12bb4485b0d3ac, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace piper {

// Basic
#ifndef _MSC_VER
constexpr uint16_t Basic::_capnpPrivate::dataWordSize;
constexpr uint16_t Basic::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Basic::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Basic::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Basic::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ParameterDescriptor
#ifndef _MSC_VER
constexpr uint16_t ParameterDescriptor::_capnpPrivate::dataWordSize;
constexpr uint16_t ParameterDescriptor::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ParameterDescriptor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ParameterDescriptor::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ParameterDescriptor::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ConfiguredOutputDescriptor
#ifndef _MSC_VER
constexpr uint16_t ConfiguredOutputDescriptor::_capnpPrivate::dataWordSize;
constexpr uint16_t ConfiguredOutputDescriptor::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ConfiguredOutputDescriptor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ConfiguredOutputDescriptor::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ConfiguredOutputDescriptor::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// OutputDescriptor
#ifndef _MSC_VER
constexpr uint16_t OutputDescriptor::_capnpPrivate::dataWordSize;
constexpr uint16_t OutputDescriptor::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind OutputDescriptor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OutputDescriptor::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* OutputDescriptor::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ExtractorStaticData
#ifndef _MSC_VER
constexpr uint16_t ExtractorStaticData::_capnpPrivate::dataWordSize;
constexpr uint16_t ExtractorStaticData::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ExtractorStaticData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExtractorStaticData::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ExtractorStaticData::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RealTime
#ifndef _MSC_VER
constexpr uint16_t RealTime::_capnpPrivate::dataWordSize;
constexpr uint16_t RealTime::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RealTime::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RealTime::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RealTime::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ProcessInput
#ifndef _MSC_VER
constexpr uint16_t ProcessInput::_capnpPrivate::dataWordSize;
constexpr uint16_t ProcessInput::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ProcessInput::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ProcessInput::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ProcessInput::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Feature
#ifndef _MSC_VER
constexpr uint16_t Feature::_capnpPrivate::dataWordSize;
constexpr uint16_t Feature::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Feature::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Feature::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Feature::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FeatureSet
#ifndef _MSC_VER
constexpr uint16_t FeatureSet::_capnpPrivate::dataWordSize;
constexpr uint16_t FeatureSet::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FeatureSet::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FeatureSet::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FeatureSet::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FeatureSet::FSPair
#ifndef _MSC_VER
constexpr uint16_t FeatureSet::FSPair::_capnpPrivate::dataWordSize;
constexpr uint16_t FeatureSet::FSPair::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FeatureSet::FSPair::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FeatureSet::FSPair::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FeatureSet::FSPair::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Framing
#ifndef _MSC_VER
constexpr uint16_t Framing::_capnpPrivate::dataWordSize;
constexpr uint16_t Framing::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Framing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Framing::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Framing::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Configuration
#ifndef _MSC_VER
constexpr uint16_t Configuration::_capnpPrivate::dataWordSize;
constexpr uint16_t Configuration::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Configuration::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Configuration::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Configuration::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Configuration::PVPair
#ifndef _MSC_VER
constexpr uint16_t Configuration::PVPair::_capnpPrivate::dataWordSize;
constexpr uint16_t Configuration::PVPair::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Configuration::PVPair::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Configuration::PVPair::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Configuration::PVPair::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstList< ::piper::AdapterFlag> ADAPT_ALL_SAFE(::capnp::schemas::b_9ed58097be8bc6f3.words + 27);
const ::capnp::_::ConstList< ::piper::AdapterFlag> ADAPT_ALL(::capnp::schemas::b_eb49b9892c5b9b83.words + 26);
// ListRequest
#ifndef _MSC_VER
constexpr uint16_t ListRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ListRequest::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ListRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ListRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ListRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ListResponse
#ifndef _MSC_VER
constexpr uint16_t ListResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ListResponse::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ListResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ListResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ListResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// LoadRequest
#ifndef _MSC_VER
constexpr uint16_t LoadRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t LoadRequest::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind LoadRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoadRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* LoadRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// LoadResponse
#ifndef _MSC_VER
constexpr uint16_t LoadResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t LoadResponse::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind LoadResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LoadResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* LoadResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ConfigurationRequest
#ifndef _MSC_VER
constexpr uint16_t ConfigurationRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ConfigurationRequest::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ConfigurationRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ConfigurationRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ConfigurationRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ConfigurationResponse
#ifndef _MSC_VER
constexpr uint16_t ConfigurationResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ConfigurationResponse::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ConfigurationResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ConfigurationResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ConfigurationResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ProcessRequest
#ifndef _MSC_VER
constexpr uint16_t ProcessRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ProcessRequest::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ProcessRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ProcessRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ProcessRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ProcessResponse
#ifndef _MSC_VER
constexpr uint16_t ProcessResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ProcessResponse::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ProcessResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ProcessResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ProcessResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FinishRequest
#ifndef _MSC_VER
constexpr uint16_t FinishRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t FinishRequest::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FinishRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FinishRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FinishRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FinishResponse
#ifndef _MSC_VER
constexpr uint16_t FinishResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t FinishResponse::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FinishResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FinishResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FinishResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Error
#ifndef _MSC_VER
constexpr uint16_t Error::_capnpPrivate::dataWordSize;
constexpr uint16_t Error::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Error::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Error::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Error::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RpcRequest
#ifndef _MSC_VER
constexpr uint16_t RpcRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t RpcRequest::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RpcRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RpcRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RpcRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RpcRequest::Id
#ifndef _MSC_VER
constexpr uint16_t RpcRequest::Id::_capnpPrivate::dataWordSize;
constexpr uint16_t RpcRequest::Id::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RpcRequest::Id::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RpcRequest::Id::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RpcRequest::Id::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RpcRequest::Request
#ifndef _MSC_VER
constexpr uint16_t RpcRequest::Request::_capnpPrivate::dataWordSize;
constexpr uint16_t RpcRequest::Request::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RpcRequest::Request::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RpcRequest::Request::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RpcRequest::Request::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RpcResponse
#ifndef _MSC_VER
constexpr uint16_t RpcResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t RpcResponse::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RpcResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RpcResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RpcResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RpcResponse::Id
#ifndef _MSC_VER
constexpr uint16_t RpcResponse::Id::_capnpPrivate::dataWordSize;
constexpr uint16_t RpcResponse::Id::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RpcResponse::Id::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RpcResponse::Id::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RpcResponse::Id::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RpcResponse::Response
#ifndef _MSC_VER
constexpr uint16_t RpcResponse::Response::_capnpPrivate::dataWordSize;
constexpr uint16_t RpcResponse::Response::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RpcResponse::Response::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RpcResponse::Response::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RpcResponse::Response::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

